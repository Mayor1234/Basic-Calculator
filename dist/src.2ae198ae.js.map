{"version":3,"sources":["src/Calculator.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.2ae198ae.js","sourceRoot":"..","sourcesContent":["export interface CalcProps {\n  prevOperand: string;\n  currentOperand: string;\n}\nexport class Calculator {\n  operation: string;\n  equals: string;\n\n  constructor(private data: CalcProps) {\n    this.operation = '';\n    this.equals = '';\n  }\n\n  static buildCalc(): Calculator {\n    return new Calculator({\n      currentOperand: '',\n      prevOperand: '',\n    });\n  }\n\n  clear(): void {\n    this.data.currentOperand = '';\n    this.data.prevOperand = '';\n    this.operation = '';\n    this.equals = '0';\n  }\n\n  del(): void {\n    this.data.currentOperand = this.data.currentOperand.slice(0, -1);\n  }\n\n  operationSelect(operation: string): void {\n    if (this.data.currentOperand === '') return;\n    if (this.data.prevOperand !== '') {\n      this.computation();\n    }\n\n    this.data.prevOperand = this.data.currentOperand;\n    this.operation = operation;\n    this.data.currentOperand = '';\n  }\n\n  appendNumber(numberSets: string) {\n    if (numberSets === '.' && this.data.currentOperand.includes('.')) return;\n    if (numberSets === '+/-') {\n      if (this.data.currentOperand === '') return;\n      const x = -this.data.currentOperand;\n      return (this.data.currentOperand = x.toString());\n    }\n\n    this.data.currentOperand += numberSets;\n  }\n\n  eventing(): void {\n    const btn = document.querySelector('.calc-buttons');\n    btn?.addEventListener('click', (e) => {\n      if (e !== null && e.target !== null) {\n        const element = e.target as Element;\n        if (element.matches('[data-number')) {\n          const numberData = element.textContent;\n          if (numberData !== null) {\n            this.appendNumber(numberData);\n            this.updateDisplay();\n          }\n        } else if (element.matches('[data-operation]')) {\n          const dataOperation = element.textContent;\n          if (dataOperation !== null) {\n            this.operationSelect(dataOperation);\n            this.updateDisplay();\n          }\n        } else if (element.matches('[data-clear]')) {\n          const dataOperation = element.textContent;\n          if (dataOperation !== null) {\n            this.clear();\n            this.updateDisplay();\n          }\n        } else if (element.matches('[data-delete]')) {\n          const dataOperation = element.textContent;\n          if (dataOperation !== null) {\n            this.del();\n            this.updateDisplay();\n          }\n        } else if (element.matches('[data-equals]')) {\n          const dataOperation = element.textContent;\n          if (dataOperation !== null) {\n            this.computation();\n            this.updateDisplay();\n          }\n        }\n      }\n    });\n  }\n  computation(): void {\n    let ans = 0;\n    const prev = parseFloat(this.data.prevOperand);\n    const curr = parseFloat(this.data.currentOperand);\n    if (isNaN(prev) || isNaN(curr)) return;\n\n    switch (this.operation) {\n      case '+':\n        ans = prev + curr;\n        break;\n      case '-':\n        ans = prev - curr;\n        break;\n      case 'x':\n        ans = prev * curr;\n        break;\n      case '/':\n        ans = prev / curr;\n        break;\n      case '%':\n        ans = (prev / 100) * curr;\n        break;\n\n      case '+/-':\n        ans = -curr;\n        break;\n\n      default:\n        break;\n    }\n    this.equals = parseFloat(ans.toFixed(4)).toString();\n    this.data.prevOperand = '';\n    this.operation = '';\n    this.data.currentOperand = this.equals;\n  }\n\n  updateDisplay() {\n    const prevOp = document.querySelector('.input-screen .prev-op') as Element;\n    const currOp = document.querySelector('.input-screen .curr-op') as Element;\n    const outputScreen = document.querySelector('.output-screen') as Element;\n    const operator = document.querySelector(\n      '.input-screen .operator'\n    ) as Element;\n\n    prevOp.textContent = this.data.prevOperand;\n    currOp.textContent = this.data.currentOperand;\n    operator.textContent = this.operation;\n    outputScreen.textContent = this.equals;\n  }\n\n  toggleTheme() {\n    const container = document.querySelector('.container') as HTMLElement;\n    const toggle = document.querySelector(\n      '.theme-toggle input'\n    ) as HTMLInputElement;\n    const label = document.querySelector('.theme-toggle label') as HTMLElement;\n\n    toggle.addEventListener('click', () => {\n      if (toggle.checked) {\n        container.classList.replace('light', 'dark');\n        label.style.background = '#333';\n      } else {\n        container.classList.replace('dark', 'light');\n        label.style.background = '#d3d4d6';\n      }\n    });\n  }\n}\n","import { Calculator } from './Calculator';\n\nconst calculator = Calculator.buildCalc();\ncalculator.eventing();\ncalculator.toggleTheme();\n"]}